install.packages(c("slidify", "ggplot2", "devtools"))
install.packages("slidify")
install.packages("KernSmooth")
library(KernSmooth)
f <- function(x) {}
g <- function(y) {}
y + z
f <- function(x) { g <- function(y) { y+z} z <- 4 x + g(x) }
z <- 10
f(3)
source('~/testFunction1.R')
z <- 10
f(3)
x <- 5
y <- if (x z) { NA } else { 10} }
y <- if (x < 3) { NA } else { 10} }
y <- if (x < 3) { NA } else { 10}
y
source('~/testFunction2.R')
source('~/testFunction2.R')
source('~/cube.R')
cube(3)
x <- 1:10
x
if(x > 5) { x <- 0}
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
head(airquality)
qplot(Wind, Ozone, data = airquality)
library(ggplot)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
setwd("~/GitHub/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
View(data)
step_day <- tapply(data$steps, data$date, sum)
View(data)
view(step_day)
hist(step_day, xlab="Number of steps per day")
data_without_NA <- na.omit(data)
head(data_without_NA)
dim(data_without_NA)
library(ggplot2)
ggplot(data_without_NA, aes(date, steps))
ggplot(data_without_NA, aes(date, steps),  x = "Date", y = "Total number of steps")
hist(data_without_NA)
qplot(date,steps)
qplot(date,step_day)
data$month <- as.numeric(format(data$date, "%m"))
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
View(data)
data$day <- as.numeric(format(data$date, "%d"))
View(data)
noNA <- na.omit(data)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
dim(noNA)
library(ggplot2)
ggplot(noNA, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(data_without_NA, aes(date,data_without_NA))
ggplot(data_without_NA, aes(date,data_without_NA).)
clear
cls
ls
data <- read.csv("activity.csv")
data <- data["is.na(data)"]
View(data)
data <- data["is.na(data$steps)"]
data <- data[!is.na(data$steps)]
na.rm=TRUE
view(data)
View(data)
View(data)
data <- na.omit(data)
data_per_day <- aggregate(data$steps, list(day=data$date), sum)
data_day <- aggregate(data$steps, list(day=data$date), sum)
View(data_day)
ggplot(data_day, aes(data$date,data$steps)) + geom_bar (stat ) "identity", colour = "steelblue", fill = "steelblue", width =0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(data_day, aes(data$date,data$steps)) + geom_bar (stat = "identity", colour = "steelblue", fill = "steelblue", width =0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(data_day, aes(date,steps)) + geom_bar (stat = "identity", colour = "steelblue", fill = "steelblue", width =0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(data_day, aes(day,x)) + geom_bar (stat = "identity", colour = "steelblue", fill = "steelblue", width =0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
plot(data_day$day, data_day$x)
plot(data_day$day, data_day$x, type = "s")
plot(data_day$day, data_day$x, type = "l")
plot(data_day$day, data_day$x, type = "s", col = "dark red")
plot(data_day$day, data_day$x, type = "h", col = "dark red")
plot(data_day$day, data_day$x, type = "h", col = "dark red", lwd = 10)
plot(data_day$day, data_day$x, type = "h", col = "dark red")
plot(data_day$day, data_day$x, type = "l")
plot(data_day$day, data_day$x, type = "s")
plot(data_day$day, data_day$x)
